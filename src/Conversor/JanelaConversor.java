/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Conversor;

import javax.swing.ButtonModel;

/**
 *
 * @author yuri
 */
public class JanelaConversor extends javax.swing.JFrame {

    /**
     * Creates new form Prova
     */
    public JanelaConversor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        GroupButtonInput = new javax.swing.ButtonGroup();
        GroupButtonOut = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        InputUnidade = new javax.swing.JTextField();
        OutputUnidade = new javax.swing.JTextField();
        InputCombobox = new javax.swing.JComboBox<>();
        OutputCombobox = new javax.swing.JComboBox<>();
        Converterbtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        InputTemp = new javax.swing.JTextField();
        OutputTemp = new javax.swing.JTextField();
        InputC = new javax.swing.JRadioButton();
        InputF = new javax.swing.JRadioButton();
        OutC = new javax.swing.JRadioButton();
        OutF = new javax.swing.JRadioButton();
        ConfirmTemp = new javax.swing.JButton();
        InputK = new javax.swing.JRadioButton();
        OutK = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ProvaB");
        setLocation(new java.awt.Point(0, 0));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setAlignmentX(0.0F);
        jPanel1.setAlignmentY(0.0F);
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jInternalFrame1.setVisible(true);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Unidade de Entrada");
        jPanel2.add(jLabel1, new java.awt.GridBagConstraints());

        jLabel2.setText("Unidade de Saida");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanel2.add(jLabel2, gridBagConstraints);

        InputUnidade.setText("0");
        InputUnidade.setToolTipText("Digite a unidade a ser convertida");
        InputUnidade.setMinimumSize(new java.awt.Dimension(50, 19));
        InputUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputUnidadeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 65;
        jPanel2.add(InputUnidade, gridBagConstraints);

        OutputUnidade.setEditable(false);
        OutputUnidade.setText("0");
        OutputUnidade.setToolTipText("Saida de unidade");
        OutputUnidade.setMinimumSize(new java.awt.Dimension(50, 50));
        OutputUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutputUnidadeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 65;
        jPanel2.add(OutputUnidade, gridBagConstraints);

        InputCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "m/s", "km/h", "nó" }));
        InputCombobox.setToolTipText("Convertido de");
        InputCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputComboboxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel2.add(InputCombobox, gridBagConstraints);

        OutputCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "m/s", "km/h", "nó" }));
        OutputCombobox.setToolTipText("Convetido para");
        OutputCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutputComboboxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel2.add(OutputCombobox, gridBagConstraints);

        Converterbtn.setText("Converter");
        Converterbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConverterbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel2.add(Converterbtn, gridBagConstraints);

        jTabbedPane1.addTab("Velocidade", jPanel2);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Unidade de entrada");
        jPanel3.add(jLabel3, new java.awt.GridBagConstraints());

        jLabel4.setText("Unidade de saida");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jLabel4, gridBagConstraints);

        InputTemp.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 65;
        jPanel3.add(InputTemp, gridBagConstraints);

        OutputTemp.setText("0");
        OutputTemp.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 65;
        jPanel3.add(OutputTemp, gridBagConstraints);

        GroupButtonInput.add(InputC);
        InputC.setText("°C");
        jPanel3.add(InputC, new java.awt.GridBagConstraints());

        GroupButtonInput.add(InputF);
        InputF.setText("°F");
        jPanel3.add(InputF, new java.awt.GridBagConstraints());

        GroupButtonOut.add(OutC);
        OutC.setText("°C");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel3.add(OutC, gridBagConstraints);

        GroupButtonOut.add(OutF);
        OutF.setText("°F");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel3.add(OutF, gridBagConstraints);

        ConfirmTemp.setText("Converter");
        ConfirmTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmTempActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        jPanel3.add(ConfirmTemp, gridBagConstraints);

        GroupButtonInput.add(InputK);
        InputK.setText("°K");
        jPanel3.add(InputK, new java.awt.GridBagConstraints());

        GroupButtonOut.add(OutK);
        OutK.setText("°K");
        OutK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        jPanel3.add(OutK, gridBagConstraints);

        jTabbedPane1.addTab("Temperatura", jPanel3);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel1.add(jInternalFrame1);

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConverterbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConverterbtnActionPerformed
        // TODO add your handling code here:
        //        String converterde = InputCombobox.getItemAt();
        //        String converterpara = OutputCombobox.getActionCommand();?
        //        System.out.println(converterde);
        int UnidadeEntrada = InputCombobox.getSelectedIndex();
        int UnidadeSaida = OutputCombobox.getSelectedIndex();
        String NumeroEntradaString = InputUnidade.getText();
        double NumeroEntrada = Double.parseDouble(NumeroEntradaString);

        switch (UnidadeEntrada) {
            case 0:
                switch (UnidadeSaida) {
                    case 0:
                        AlteraTexto(NumeroEntrada);
                        break;
                    case 1:
                        MetrosParaKM(NumeroEntrada);
                        break;
                    case 2:
                        MetrosparaNO(NumeroEntrada);
                        break;
                }
                break;
            case 1:
                switch (UnidadeSaida) {
                    case 0:
                        KMparaMetros(NumeroEntrada);
                        break;
                    case 1:
                        AlteraTexto(NumeroEntrada);
                        break;
                    case 2:
                        KMparaNO(NumeroEntrada);
                        break;
                }
                break;
            case 2:
                switch (UnidadeSaida) {
                    case 0:
                        NOparaMetros(NumeroEntrada);
                        break;
                    case 1:
                        NOparaKM(NumeroEntrada);
                        break;
                    case 2:
                        AlteraTexto(NumeroEntrada);
                        break;
                }
                break;
        }

    }//GEN-LAST:event_ConverterbtnActionPerformed
    public void AlteraTexto(double var) {
        OutputUnidade.setText("" + var);
    }

    public void MetrosParaKM(double Metros) {
        double Resultado = Metros * 3.6;
        AlteraTexto(Resultado);
    }

    public void MetrosparaNO(double Metros) {
        double Resultado = Metros * 1.94384;
        AlteraTexto(Resultado);
    }

    public void KMparaMetros(double KM) {
        double Resultado = KM / 3.6;
        AlteraTexto(Resultado);
    }

    public void KMparaNO(double KM) {
        double Resultado = KM * 1.852;
        AlteraTexto(Resultado);
    }

    public void NOparaMetros(double NO) {
        double Resultado = NO / 1.94384;
        AlteraTexto(Resultado);
    }

    public void NOparaKM(double NO) {
        double Resultado = NO / 1.852;
        AlteraTexto(Resultado);
    }

    private void OutputComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutputComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OutputComboboxActionPerformed

    private void InputComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputComboboxActionPerformed

    private void OutputUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutputUnidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OutputUnidadeActionPerformed

    private void InputUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputUnidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputUnidadeActionPerformed

    private void ConfirmTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmTempActionPerformed
        // TODO add your handling code here:
        String input = InputTemp.getText();
        double inputdouble = Double.parseDouble(input);
        double outText = inputdouble;

        if (InputC.isSelected()) {
            if (OutF.isSelected()) {
                outText = (inputdouble * 1.8) + 32;
            }
            if (OutK.isSelected()) {
                outText = inputdouble - 273;
            }

        }
        if (InputF.isSelected()) {
            if (OutC.isSelected()) {
                outText = (inputdouble - 32) / 1.80;
            }
            if (OutK.isSelected()) {
                outText = ((inputdouble - 32) / 1.80) - 273;
            }

        }
        if(InputK.isSelected()){
            if(OutC.isSelected()){
                outText = inputdouble +273;
            }
            if(OutF.isSelected()){
                outText = ((inputdouble - 32) / 1.80)+273;
            }
        }
        OutputTemp.setText("" + outText);


    }//GEN-LAST:event_ConfirmTempActionPerformed

    private void OutKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OutKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
//                  if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaConversor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConfirmTemp;
    private javax.swing.JButton Converterbtn;
    private javax.swing.ButtonGroup GroupButtonInput;
    private javax.swing.ButtonGroup GroupButtonOut;
    private javax.swing.JRadioButton InputC;
    private javax.swing.JComboBox<String> InputCombobox;
    private javax.swing.JRadioButton InputF;
    private javax.swing.JRadioButton InputK;
    private javax.swing.JTextField InputTemp;
    private javax.swing.JTextField InputUnidade;
    private javax.swing.JRadioButton OutC;
    private javax.swing.JRadioButton OutF;
    private javax.swing.JRadioButton OutK;
    private javax.swing.JComboBox<String> OutputCombobox;
    private javax.swing.JTextField OutputTemp;
    private javax.swing.JTextField OutputUnidade;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
